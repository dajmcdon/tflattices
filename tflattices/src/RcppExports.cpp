// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// builddmat
arma::sp_mat builddmat(arma::ivec lens, arma::ivec ords, arma::ivec wrap);
RcppExport SEXP _tflattices_builddmat(SEXP lensSEXP, SEXP ordsSEXP, SEXP wrapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::ivec >::type lens(lensSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type ords(ordsSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type wrap(wrapSEXP);
    rcpp_result_gen = Rcpp::wrap(builddmat(lens, ords, wrap));
    return rcpp_result_gen;
END_RCPP
}
// projnull
arma::mat projnull(arma::sp_mat const& D, arma::uvec S);
RcppExport SEXP _tflattices_projnull(SEXP DSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat const& >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(projnull(D, S));
    return rcpp_result_gen;
END_RCPP
}
// phipp
arma::sp_mat phipp(int lossfunction, arma::vec th);
RcppExport SEXP _tflattices_phipp(SEXP lossfunctionSEXP, SEXP thSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type lossfunction(lossfunctionSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type th(thSEXP);
    rcpp_result_gen = Rcpp::wrap(phipp(lossfunction, th));
    return rcpp_result_gen;
END_RCPP
}
// etfgrid_c
List etfgrid_c(arma::vec Y, arma::ivec dimensions, arma::ivec korder, arma::ivec wrap, int lossfunction, int nsol, double lambdamin, double lambdamax, arma::vec lambda, double mu_adjust, double rho_adjust, double mu, double rho, int pen_null, double alpha, int dfestim, int maxiter, double tolerance, int verbose);
RcppExport SEXP _tflattices_etfgrid_c(SEXP YSEXP, SEXP dimensionsSEXP, SEXP korderSEXP, SEXP wrapSEXP, SEXP lossfunctionSEXP, SEXP nsolSEXP, SEXP lambdaminSEXP, SEXP lambdamaxSEXP, SEXP lambdaSEXP, SEXP mu_adjustSEXP, SEXP rho_adjustSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP pen_nullSEXP, SEXP alphaSEXP, SEXP dfestimSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type dimensions(dimensionsSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type korder(korderSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type wrap(wrapSEXP);
    Rcpp::traits::input_parameter< int >::type lossfunction(lossfunctionSEXP);
    Rcpp::traits::input_parameter< int >::type nsol(nsolSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamin(lambdaminSEXP);
    Rcpp::traits::input_parameter< double >::type lambdamax(lambdamaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_adjust(mu_adjustSEXP);
    Rcpp::traits::input_parameter< double >::type rho_adjust(rho_adjustSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type pen_null(pen_nullSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type dfestim(dfestimSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(etfgrid_c(Y, dimensions, korder, wrap, lossfunction, nsol, lambdamin, lambdamax, lambda, mu_adjust, rho_adjust, mu, rho, pen_null, alpha, dfestim, maxiter, tolerance, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tflattices_builddmat", (DL_FUNC) &_tflattices_builddmat, 3},
    {"_tflattices_projnull", (DL_FUNC) &_tflattices_projnull, 2},
    {"_tflattices_phipp", (DL_FUNC) &_tflattices_phipp, 2},
    {"_tflattices_etfgrid_c", (DL_FUNC) &_tflattices_etfgrid_c, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_tflattices(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
